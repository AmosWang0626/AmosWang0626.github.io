import{_ as p,o as e,a as t,b as n,e as o,F as c,d as s,c as r,r as l}from"./app.812cf964.js";const i={},u=n("h1",{id:"hexo\u6302\u6389\u81EA\u52A8\u91CD\u542F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hexo\u6302\u6389\u81EA\u52A8\u91CD\u542F","aria-hidden":"true"},"#"),s(" Hexo\u6302\u6389\u81EA\u52A8\u91CD\u542F")],-1),k=n("p",null,"\u4F7F\u7528hexo\u65F6\uFF0Chexo\u8FDB\u7A0B\u603B\u4F1A\u65E0\u8F9C\u6302\u6389\uFF08\u53EF\u80FD\u662F\u670D\u52A1\u5668\u5185\u5B58\u4E0D\u591F\uFF09\uFF0C\u6240\u4EE5\u5C31\u9700\u8981\u4E00\u4E2A\u80FD\u76D1\u63A7hexo\u6302\u6389\uFF0C\u5C31\u81EA\u52A8\u91CD\u542F\u7684\u5C0F\u5DE5\u5177\u3002",-1),d=n("p",null,[n("code",null,"npm install pm2 -g")],-1),m=n("h2",{id:"_1-pm2\u4ECB\u7ECD",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-pm2\u4ECB\u7ECD","aria-hidden":"true"},"#"),s(" 1. pm2\u4ECB\u7ECD")],-1),b={href:"https://github.com/Unitech/pm2",target:"_blank",rel:"noopener noreferrer"},h=s("https://github.com/Unitech/pm2"),_=r(`<p>\u5177\u6709\u5185\u7F6E\u8D1F\u8F7D\u5747\u8861\u7684\u7684Node.js\u5E94\u7528\u8FDB\u7A0B\u7BA1\u7406\u5668\u3002</p><h3 id="\u65B0\u589E" tabindex="-1"><a class="header-anchor" href="#\u65B0\u589E" aria-hidden="true">#</a> \u65B0\u589E</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 start --name hexo /opt/hexo/auto-start-hexo.js
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="\u5220\u9664" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664" aria-hidden="true">#</a> \u5220\u9664</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ delete<span class="token operator">|</span>del <span class="token operator">&lt;</span>name<span class="token operator">|</span><span class="token function">id</span><span class="token operator">|</span>namespace<span class="token operator">|</span>script<span class="token operator">|</span>all<span class="token operator">|</span>json<span class="token operator">|</span>stdin<span class="token punctuation">..</span>.<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#\u67E5\u8BE2" aria-hidden="true">#</a> \u67E5\u8BE2</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ pm2 list<span class="token operator">|</span><span class="token function">ls</span><span class="token operator">|</span>l<span class="token operator">|</span><span class="token function">ps</span><span class="token operator">|</span>status
$ pm2 logs
$ pm2 monit
$ pm2 describe <span class="token operator">&lt;</span>id<span class="token operator">|</span>app_name<span class="token operator">&gt;</span>

$ pm2 stop     <span class="token operator">&lt;</span>app_name<span class="token operator">|</span>namespace<span class="token operator">|</span><span class="token function">id</span><span class="token operator">|</span><span class="token string">&#39;all&#39;</span><span class="token operator">|</span>json_conf<span class="token operator">&gt;</span>
$ pm2 restart  <span class="token operator">&lt;</span>app_name<span class="token operator">|</span>namespace<span class="token operator">|</span><span class="token function">id</span><span class="token operator">|</span><span class="token string">&#39;all&#39;</span><span class="token operator">|</span>json_conf<span class="token operator">&gt;</span>
$ pm2 delete   <span class="token operator">&lt;</span>app_name<span class="token operator">|</span>namespace<span class="token operator">|</span><span class="token function">id</span><span class="token operator">|</span><span class="token string">&#39;all&#39;</span><span class="token operator">|</span>json_conf<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_2-\u81EA\u52A8\u542F\u52A8hexo\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_2-\u81EA\u52A8\u542F\u52A8hexo\u811A\u672C" aria-hidden="true">#</a> 2. \u81EA\u52A8\u542F\u52A8hexo\u811A\u672C</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> exec <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exec<span class="token punctuation">;</span>
<span class="token keyword">var</span> cmd <span class="token operator">=</span> <span class="token string">&#39;cd /opt/hexo/hexoui &amp;&amp; nohup hexo s &amp;&#39;</span><span class="token punctuation">;</span>

<span class="token function">exec</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token keyword">if</span><span class="token punctuation">(</span>stdout<span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;stdout: &#39;</span> <span class="token operator">+</span> stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>stderr<span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;stderr: &#39;</span> <span class="token operator">+</span> stderr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;start error!&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;start hexo-js success!&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// process.exit(0);</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="_3-\u7528-pm2-\u6267\u884C\u5982\u4E0A\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_3-\u7528-pm2-\u6267\u884C\u5982\u4E0A\u811A\u672C" aria-hidden="true">#</a> 3. \u7528 pm2 \u6267\u884C\u5982\u4E0A\u811A\u672C</h2><blockquote><p>\u627E\u4E0D\u5230 pm2 \u547D\u4EE4\uFF1F\u8FDB\u5165 node \u5B89\u88C5\u76EE\u5F55\u4E0B\u7684 bin \u76EE\u5F55</p></blockquote><p><code>pm2 start /app/hexo/hexo-auto.js</code></p><p><code>pm2 logs</code></p><p><code>pm2 list</code></p>`,14);function x(g,f){const a=l("ExternalLinkIcon");return e(),t(c,null,[u,k,d,m,n("p",null,[n("a",b,[h,o(a)])]),_],64)}var j=p(i,[["render",x],["__file","02.Hexo\u6302\u6389\u81EA\u52A8\u91CD\u542F.html.vue"]]);export{j as default};
