import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e,h as n,i,o as t}from"./app-DLNDcB-b.js";const p="/assets/github_vuepress_01-CcdlYgYa.png",r="/assets/github_vuepress_02-Cj7XJq8m.png",l="/assets/github_vuepress_03-jXtnSGJ8.png",o="/assets/github_vuepress_04-B6XIXMBb.png",d="/assets/github_vuepress_05-G1UObEa5.png",c="/assets/github_vuepress_06-CX5DrLwF.png",u="/assets/github_vuepress_07-C2XKBD-C.png",g="/assets/github_vuepress_08-CFhM_ya9.png",h="/assets/github_vuepress_09-BigfFZ16.png",b="/assets/github_vuepress_10-Jeqkn7rf.png",m="/assets/github_vuepress_11-AoVhEIfP.png",v="/assets/github_vuepress_12-aj8HUdCo.png",f={};function _(x,s){return t(),e("div",null,[s[0]||(s[0]=n(`<p>本文着重讲 GitHub 自动化部署，创建 VuePress 官方文档比较详细，就不说啦。</p><h2 id="创建vuepress项目" tabindex="-1"><a class="header-anchor" href="#创建vuepress项目"><span>创建VuePress项目</span></a></h2><p><a href="https://v2.vuepress.vuejs.org/zh/" target="_blank" rel="noopener noreferrer">https://v2.vuepress.vuejs.org/zh/</a></p><p>当然呢，可以参考我的项目</p><p><a href="https://github.com/AmosWang0626/AmosWang0626.github.io" target="_blank" rel="noopener noreferrer">https://github.com/AmosWang0626/AmosWang0626.github.io</a></p><p>使用 yarn 命令打包部署：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># install</span></span>
<span class="line"><span>yarn install</span></span>
<span class="line"><span></span></span>
<span class="line"><span># start</span></span>
<span class="line"><span>yarn dev</span></span>
<span class="line"><span></span></span>
<span class="line"><span># build</span></span>
<span class="line"><span>yarn build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="github-自动化部署" tabindex="-1"><a class="header-anchor" href="#github-自动化部署"><span>Github 自动化部署</span></a></h2><h3 id="步骤概览" tabindex="-1"><a class="header-anchor" href="#步骤概览"><span>步骤概览</span></a></h3><ol><li>创建<strong>个人维度</strong>的 Github Token（后边自动化部署 push 代码需要）</li><li>创建<strong>项目维度</strong>的变量，值就是上一步生成的密钥</li><li>创建流水线，自动化打包发布</li><li>打包发布完成，切换到 gh-pages 分支，等站点自动化部署完，就能访问啦～</li></ol><h3 id="第一步-创建-token" tabindex="-1"><a class="header-anchor" href="#第一步-创建-token"><span>第一步：创建 Token</span></a></h3><figure><img src="`+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="第二步-创建项目变量" tabindex="-1"><a class="header-anchor" href="#第二步-创建项目变量"><span>第二步：创建项目变量</span></a></h3><p>这里创建项目维度的变量，下一步创建的脚本里边要用到。</p><p>名字就取 ACCESS_TOKEN ，值就是上一步生成的密钥。</p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="第三步-创建流水线-自动化打包发布" tabindex="-1"><a class="header-anchor" href="#第三步-创建流水线-自动化打包发布"><span>第三步：创建流水线，自动化打包发布</span></a></h3><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里前端项目是 node.js 技术栈，就搜索 node 了</p><figure><img src="'+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node</span></span>
<span class="line"><span># For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs</span></span>
<span class="line"><span></span></span>
<span class="line"><span>name: Node.js CI</span></span>
<span class="line"><span></span></span>
<span class="line"><span>on:</span></span>
<span class="line"><span>  push:</span></span>
<span class="line"><span>    branches: [ &quot;master&quot; ]</span></span>
<span class="line"><span>  pull_request:</span></span>
<span class="line"><span>    branches: [ &quot;master&quot; ]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jobs:</span></span>
<span class="line"><span>  build:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    runs-on: ubuntu-latest</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    strategy:</span></span>
<span class="line"><span>      matrix:</span></span>
<span class="line"><span>        node-version: [18.x]</span></span>
<span class="line"><span>        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    steps:</span></span>
<span class="line"><span>      - uses: actions/checkout@v3</span></span>
<span class="line"><span>      - name: Use Node.js \${{ matrix.node-version }}</span></span>
<span class="line"><span>        uses: actions/setup-node@v3</span></span>
<span class="line"><span>        with:</span></span>
<span class="line"><span>          node-version: \${{ matrix.node-version }}</span></span>
<span class="line"><span>          cache: &#39;npm&#39;</span></span>
<span class="line"><span>      - run: npm install yarn -g</span></span>
<span class="line"><span>      - run: yarn install</span></span>
<span class="line"><span>      - run: yarn build</span></span>
<span class="line"><span>      - name: Deploy</span></span>
<span class="line"><span>        uses: JamesIves/github-pages-deploy-action@v4</span></span>
<span class="line"><span>        with:</span></span>
<span class="line"><span>          token: \${{ secrets.ACCESS_TOKEN }}</span></span>
<span class="line"><span>          branch: gh-pages</span></span>
<span class="line"><span>          folder: dist</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相比自动生成的，只改了这些地方。</p><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>保存之后，就会自己自动化部署了。</p><p>这里常见的问题是push的时候权限不足，遇到这种情况，再检查下第一步、第二步即可。</p><h3 id="第四步-切换分支-自动化部署" tabindex="-1"><a class="header-anchor" href="#第四步-切换分支-自动化部署"><span>第四步：切换分支，自动化部署</span></a></h3><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>进入 Actions 查看进度，等 deploy 完成就能访问了。</p><p>刷新浏览器，可能有几秒缓存，不慌，多刷几次就好了。</p><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="相关问题" tabindex="-1"><a class="header-anchor" href="#相关问题"><span>相关问题：</span></a></h2><h3 id="deploy-时报-403-也即权限不足" tabindex="-1"><a class="header-anchor" href="#deploy-时报-403-也即权限不足"><span>Deploy 时报 403，也即权限不足</span></a></h3><ol><li>检查<strong>个人维度</strong>的 Github Token，Token 的名字随意</li><li>检查<strong>项目维度</strong>的变量设置，变量的名字一定要和 node 脚本里的一致</li></ol>',36)),i(""),s[1]||(s[1]=n('<ol><li><ol><li>例如：ACCESS_TOKEN</li></ol></li></ol><h3 id="invalid-username-or-password" tabindex="-1"><a class="header-anchor" href="#invalid-username-or-password"><span>Invalid username or password.</span></a></h3><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这种就是 token 更新了，需要换下 ACCESS_TOKEN 的值。</p><h3 id="博客部署完成-页面样式错误" tabindex="-1"><a class="header-anchor" href="#博客部署完成-页面样式错误"><span>博客部署完成，页面样式错误</span></a></h3><p>也即静态文件加载不到了。</p><p>这是因为部署的站点不在个人 <a href="http://xxx.github.io" target="_blank" rel="noopener noreferrer">xxx.github.io</a> 下边，请求路径例如 <a href="http://xxx.github.io/xxx_blog" target="_blank" rel="noopener noreferrer">xxx.github.io/xxx_blog</a></p><ul><li>静态文件的路径也需要通过 <a href="http://xxx.github.io/xxx_blog/assets/xxx.css" target="_blank" rel="noopener noreferrer">xxx.github.io/xxx_blog/assets/xxx.css</a> 这样访问。</li><li>但默认不配置 base 的时候，是直接在根域名下访问静态文件的，<a href="http://xxx.github.io/assets/xxx.css" target="_blank" rel="noopener noreferrer">xxx.github.io/assets/xxx.css</a> 这种。</li><li>配置base的时候，两端的 / 不能少哦。</li></ul><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',9))])}const A=a(f,[["render",_],["__file","vuepress_and_github.html.vue"]]),z=JSON.parse('{"path":"/front/vuepress_and_github.html","title":"VuePress + Github Action","lang":"zh-CN","frontmatter":{"title":"VuePress + Github Action","icon":"gears","date":"2023-06-10T00:00:00.000Z","categories":"前端相关","tags":["VuePress","Github"],"description":"本文着重讲 GitHub 自动化部署，创建 VuePress 官方文档比较详细，就不说啦。 创建VuePress项目 https://v2.vuepress.vuejs.org/zh/ 当然呢，可以参考我的项目 https://github.com/AmosWang0626/AmosWang0626.github.io 使用 yarn 命令打包部署： ...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/front/vuepress_and_github.html"}],["meta",{"property":"og:site_name","content":"JAVA技术学习笔记"}],["meta",{"property":"og:title","content":"VuePress + Github Action"}],["meta",{"property":"og:description","content":"本文着重讲 GitHub 自动化部署，创建 VuePress 官方文档比较详细，就不说啦。 创建VuePress项目 https://v2.vuepress.vuejs.org/zh/ 当然呢，可以参考我的项目 https://github.com/AmosWang0626/AmosWang0626.github.io 使用 yarn 命令打包部署： ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-10T15:05:35.000Z"}],["meta",{"property":"article:tag","content":"VuePress"}],["meta",{"property":"article:tag","content":"Github"}],["meta",{"property":"article:published_time","content":"2023-06-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-10T15:05:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"VuePress + Github Action\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-10T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-10T15:05:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Amos Wang\\",\\"url\\":\\"https://github.com/AmosWang0626\\"}]}"]]},"git":{"createdTime":1686369044000,"updatedTime":1741619135000,"contributors":[{"name":"amos.wang","username":"amos.wang","email":"1833063210@qq.com","commits":4,"url":"https://github.com/amos.wang"}]},"readingTime":{"minutes":2.27,"words":681},"filePathRelative":"front/vuepress_and_github.md","localizedDate":"2023年6月10日","excerpt":"<p>本文着重讲 GitHub 自动化部署，创建 VuePress 官方文档比较详细，就不说啦。</p>\\n<h2>创建VuePress项目</h2>\\n<p><a href=\\"https://v2.vuepress.vuejs.org/zh/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://v2.vuepress.vuejs.org/zh/</a></p>\\n<p>当然呢，可以参考我的项目</p>\\n<p><a href=\\"https://github.com/AmosWang0626/AmosWang0626.github.io\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/AmosWang0626/AmosWang0626.github.io</a></p>","autoDesc":true}');export{A as comp,z as data};
